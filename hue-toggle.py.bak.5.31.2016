#!/usr/bin/env python
 
from scapy.all import *
import requests,json
 
bridgeIP = "192.168.1.2"                    #IP Address of your Bridge
user = "VaA-1-uG7zUmFzZHhXIjinA-I-Dr2IUjvtz-O9Pj"    #Username you generated
dashBtn = "10:0d:7f:79:46:86"                #MAC address of your Dash button
# lightID = "3"                                #ID of the light you want to control
lightIDs = ["1", "2", "3"]

# "Adam-Bookshelf" Is light ID:  1
# "Adam-Overhang" Is light ID:  3
# "Adam-Nightstand" Is light ID:  2

def set_first():
	print "\tset_first()"
	url = "http://"+bridgeIP+"/api/"+user+"/lights/1"
	r = requests.put(url+"/state",json.dumps({'on':True, 'xy':[0.1684,0.0416]}))

	url = "http://"+bridgeIP+"/api/"+user+"/lights/2"
	r = requests.put(url+"/state",json.dumps({'on':True, 'xy':[0.6451,0.3062]}))

	url = "http://"+bridgeIP+"/api/"+user+"/lights/3"
	r = requests.put(url+"/state",json.dumps({'on':True, 'xy':[0.1684,0.0416]}))

def all_off():
	print "\tall_off()"
	for lightID in lightIDs:
		url = "http://"+bridgeIP+"/api/"+user+"/lights/"+lightID
		r = requests.put(url+"/state",json.dumps({'on':False}))


def toggle():
	first = True
	for lightID in lightIDs:
		# print "*****"
		# print "light ID: " + str(lightID)
		url = "http://"+bridgeIP+"/api/"+user+"/lights/"+lightID
		r = requests.get(url)
		data = json.loads(r.text)

		if data["state"]["on"] == True:
			# print "on"
			# print "xy:" + str(data["state"]["xy"])
			# print "x:" + str(data["state"]["xy"][0])
			# print "x test:" + str(str(data["state"]["xy"][0]) != "0.1684")
			# print "y:" + str(data["state"]["xy"][1])
			# print "y test:" + str(str(data["state"]["xy"][1]) != "0.0417")

			if lightID=="1" and (str(data["state"]["xy"][0]) != "0.1684" or str(data["state"]["xy"][1]) != "0.0417"):
				# set_first()
				break
			elif lightID=="2" and (str(data["state"]["xy"][0]) != "0.645" or str(data["state"]["xy"][0]) != "0.3062"):
				# set_first()
				break
			elif lightID=="3" and (str(data["state"]["xy"][0]) != "0.1684" or str(data["state"]["xy"][0]) != "0.0416"):
				# set_first()
				break
			else: 
				first = False

	if first == True:
		set_first()
	else: 
		all_off()

 
def arp_display(pkt):
	print "*****"
	print "pkt"
	if pkt[ARP].op == 1:
		print "*****"
		print "\thwsrc: " + pkt[ARP].hwsrc
		print "\tpsrc: " + pkt[ARP].psrc
		if pkt[ARP].hwsrc == dashBtn:
			print "\tpkt[ARP].hwsrc == dashBtn"
			toggle()
 
print "start"
print sniff(prn=arp_display, filter="arp", store=0, count=0)
print "stop"

